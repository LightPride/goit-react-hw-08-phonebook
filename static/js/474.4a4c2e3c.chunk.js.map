{"version":3,"file":"static/js/474.4a4c2e3c.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","components/Layout/Layout.styled.js","components/ContactForm/ContactForm.styled.js","redux/Contacts/selectors.js","components/notifyOptions.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","Pages/Contacts/Contacts.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 40px;\n  width: 400px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  font-size: ${p => p.theme.fontSize.xl};\n  color: ${p => p.theme.colors.white};\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 20px 20px;\n  border: 2.5px solid black;\n  border-radius: 15px;\n  width: 450px;\n`;\n\nexport const FormInput = styled.input`\n  margin-top: 10px;\n  padding-left: 10px;\n  height: 30px;\n  border: 2px solid black;\n  outline: none;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.71;\n  letter-spacing: 0.01em;\n  color: black;\n`;\n\nexport const FormButton = styled.button`\n  margin-top: 15px;\n  align-items: center;\n  background-color: #fee6e3;\n  border: 2px solid #111;\n  border-radius: 8px;\n  box-sizing: border-box;\n  color: #111;\n  cursor: pointer;\n  margin-right: 10px;\n  font-family: Inter, sans-serif;\n  font-size: 16px;\n  height: 38px;\n  justify-content: center;\n  line-height: 24px;\n  width: 140px;\n  padding: 0 20px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:after {\n    background-color: #111;\n    border-radius: 8px;\n    content: '';\n    display: block;\n    height: 38px;\n    left: 0;\n    width: 100%;\n    position: absolute;\n    top: -2px;\n    transform: translate(8px, 8px);\n    transition: transform 0.2s ease-out;\n    z-index: -1;\n  }\n\n  &:hover:after {\n    transform: translate(0, 0);\n  }\n\n  &:active {\n    background-color: #ffdeda;\n    outline: 0;\n  }\n\n  &:hover {\n    outline: 0;\n  }\n  @media (min-width: 768px) {\n    & {\n      padding: 0 20px;\n    }\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilterValue = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilterValue(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","export const notifyOptions = {\n  position: 'bottom-left',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n","import React, { useState } from 'react';\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport shortid from 'shortid';\nimport { selectContacts, selectIsLoading } from 'redux/Contacts/selectors';\n\nimport { toast } from 'react-toastify';\nimport { notifyOptions } from 'components/notifyOptions';\n\nfunction ContactForm() {\n  const [number, setNumber] = useState('');\n  const [name, setName] = useState('');\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizedName = name.toLowerCase();\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n    if (existingContact) {\n      toast.error(`${name}: is already in contacts`, notifyOptions);\n      return;\n    }\n\n    dispatch(addContact({ id: shortid.generate(), name, number }));\n    resetForm();\n  };\n\n  const handleChange = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form action=\"\" onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"\">\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <FormLabel htmlFor=\"\">\n        Phone\n        <FormInput\n          type=\"text\"\n          value={number}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          onChange={handleChange}\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">\n        {isLoading ? 'Loading...' : 'Add Contact'}\n      </FormButton>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  width: 300px;\n  margin-top: 10px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n`;\n\nexport const ContactsName = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.71;\n  letter-spacing: 0.01em;\n  color: black;\n`;\n\nexport const ContactsPhone = styled.span``;\n\nexport const ContactsButton = styled.button`\nalign-items: center;\n  background-image: linear-gradient(135deg, #f34079 40%, #fc894d);\n  border: 0;\n  border-radius: 10px;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  font-family: \"Codec cold\",sans-serif;\n  font-size: 10px;\n  font-weight: 700;\n  height: 28px;\n  justify-content: center;\n  letter-spacing: .2px;\n  line-height: 1;\n  max-width: 100%;\n  padding-left: 5px;\n  padding-right: 5px;\n  padding-top: 3px;\n  text-decoration: none;\n  text-transform: uppercase;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  \n  &:active {\n  outline: 0;\n}\n\n&:hover {\n  outline: 0;\n}\n\n& span {\n  transition: all 300ms;\n}\n\n&:hover span {\n  transform: scale(.8);\n  opacity: .75;\n}\n\n@media screen and (max-width: 991px) {\n  & {\n    font-size: 15px;\n    height: 50px;\n  }\n\n\n  & span {\n    line-height: 10px;\n  }\n\n  `;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/Contacts/operations';\nimport {\n  ContactsList,\n  ContactsItem,\n  ContactsName,\n  ContactsPhone,\n  ContactsButton,\n} from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/operations';\nimport { selectVisibleContacts } from 'redux/Contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const contacts = useSelector(selectVisibleContacts);\n  return (\n    <>\n      {contacts.length > 0 && (\n        <ContactsList>\n          {contacts.map(contact => {\n            return (\n              <ContactsItem key={contact.id}>\n                <ContactsName>\n                  {contact.name}: <ContactsPhone>{contact.phone}</ContactsPhone>\n                </ContactsName>\n                <ContactsButton\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(contact.id))}\n                >\n                  <span>Delete</span>\n                </ContactsButton>\n              </ContactsItem>\n            );\n          })}\n        </ContactsList>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.71;\n  letter-spacing: 0.01em;\n  color: black;\n`;\n\nexport const FilterInput = styled.input`\n  padding-left: 10px;\n  margin-left: 7px;\n  height: 18px;\n  border: 2px dashed black;\n  outline: none;\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport { FilterInput, FilterLabel } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/Contacts/filterSlice';\nimport { selectFilterValue } from 'redux/Contacts/selectors';\n\nconst Filter = () => {\n  const filterValue = useSelector(selectFilterValue);\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n\n  return (\n    <FilterLabel htmlFor=\"filter\">\n      Find contacts by name\n      <FilterInput\n        name=\"filter\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleFilterChange}\n      />\n    </FilterLabel>\n  );\n};\n\nexport default Filter;\n","// import { useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Title } from 'components/Layout/Layout.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  // const dispatch = useDispatch();\n\n  return (\n    <>\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n      <Title title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Contacts;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","e","t","f","n","Array","isArray","arguments","Title","styled","p","theme","fontSize","xl","colors","white","Form","FormInput","FormLabel","FormButton","selectContacts","state","contacts","items","selectFilterValue","filter","selectIsLoading","isLoading","selectVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","notifyOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useState","number","setNumber","setName","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","resetForm","action","onSubmit","preventDefault","normalizedName","find","toast","addContact","id","shortid","htmlFor","type","pattern","title","required","onChange","ContactsList","ContactsItem","ContactsName","ContactsPhone","ContactsButton","useEffect","fetchContacts","map","phone","onClick","deleteContact","FilterLabel","FilterInput","filterValue","changeFilter","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","_seed_","mask","log","LN2","step"],"sourceRoot":""}